/*******************************************************************************
   Drop database if it exists (modified from chinook)
********************************************************************************/
--DROP USER adminman CASCADE;

/*******************************************************************************
   Create database
********************************************************************************/
/* CREATE USER adminman
IDENTIFIED BY abc123
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA 10M ON users;

GRANT connect to adminman;
GRANT resource to adminman;
GRANT create session TO adminman;
GRANT create table TO adminman;
GRANT create view TO adminman;

conn adminman/abc123

COMMIT;
EXIT; */
/*******************************************************************************
   END DBMAKER
********************************************************************************/

CREATE TABLE EMPLOYEE(
    USERNAME VARCHAR2(20),
    USERPASS VARCHAR2(20),
    EMAIL VARCHAR2(100),
    FIRSTNAME VARCHAR(20),
    LASTNAME VARCHAR(20),
    MANAGER_USERNAME VARCHAR2(20),
    CONSTRAINT PK_EMPLOYEE_USERNAME PRIMARY KEY (USERNAME),
    CONSTRAINT FK_EMPLOYEE_MANAGER FOREIGN KEY (MANAGER_USERNAME)
        REFERENCES EMPLOYEE(USERNAME)
);

-- 0 is pending, 1 approved, 2 rejected
--APPROVING_MANAGER is null unless approved
CREATE TABLE REIMBURSEMENT(
    RE_ID NUMBER,
    EMP_USERNAME VARCHAR(20),
    APPROVING_MANAGER VARCHAR2(20),
    STATUS NUMBER,
    AMOUNT NUMBER,
    DATE_MADE DATE,
    NOTES VARCHAR(400),
    CONSTRAINT PK_REIMBURSEMENT_RE_ID PRIMARY KEY (RE_ID),
    CONSTRAINT FK_EMP_USERNAME FOREIGN KEY 
        (EMP_USERNAME) REFERENCES EMPLOYEE(USERNAME)
);
/*
ALTER TABLE REIMBURSEMENT ADD CONSTRAINT FK_EMP_USERNAME FOREIGN KEY 
 (EMP_USERNAME) REFERENCES EMPLOYEE(USERNAME);*/

CREATE TABLE REIMBURSEMENT_IMAGE(
    REIM_ID NUMBER,
    CONTENT_TYPE VARCHAR2(128),
    BLOB_CONTENT BLOB,
    CONSTRAINT FK_REIM_REIM_IMG FOREIGN KEY (REIM_ID)
        REFERENCES REIMBURSEMENT(RE_ID)
);

--Any stored procedures I try to make will be added here

--CALL THIS WHEN ADDING AN EMPLOYEE, IT SHOULD ONLY UPDATE
--THE PASSWORD IF AN EMPLOYEE OF THAT USRENAME ALREADY EXISTS
CREATE OR REPLACE PROCEDURE ADD_EMPLOYEE
(UNAME IN VARCHAR2, UPASS IN VARCHAR2, EMAIL IN VARCHAR2,
    FNAME IN VARCHAR2, LNAME IN VARCHAR2, MANAGER_USERNAME IN VARCHAR2)
AS
BEGIN
    INSERT INTO EMPLOYEE VALUES (UNAME, UPASS, EMAIL,
        FNAME, LNAME, MANAGER_USERNAME);
EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
    UPDATE EMPLOYEE
    SET USERPASS = UPASS
    WHERE USERNAME = UNAME;
END;
/

CREATE OR REPLACE PROCEDURE ADD_REIMBURSEMENT
(REID IN NUMBER, USERNAME IN VARCHAR2, STATUS IN NUMBER, 
    AMOUNT IN NUMBER, DATE_IN IN DATE, NOTES IN VARCHAR2)
AS
BEGIN
    INSERT INTO REIMBURSEMENT VALUES(REID, USERNAME, NULL,
        STATUS, AMOUNT, DATE_IN, NOTES);
EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
    UPDATE REIMBURSEMENT
    SET REIMBURSEMENT.STATUS =  STATUS
    WHERE RE_ID IN REID;
END;
/

--Approves an RE_ID, approving manager's ID is provided
-- as a param, sets status of REIM to 1
CREATE OR REPLACE PROCEDURE APPROVE_REIM
(RE_INPUT IN NUMBER, TO_STATUS IN NUMBER, MAN_NAME IN VARCHAR2)
AS
BEGIN
    UPDATE REIMBURSEMENT SET STATUS = TO_STATUS, APPROVING_MANAGER = MAN_NAME
        WHERE RE_ID = RE_INPUT;
EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
    --do nothing
COMMIT;
END;
/

--When grabbing managers, use this to fill out underling list
CREATE OR REPLACE PROCEDURE GRAB_UNDERLINGS
(MAN_NAME IN VARCHAR2, C_OUT OUT SYS_REFCURSOR)
AS BEGIN
    OPEN C_OUT FOR
    SELECT * FROM EMPLOYEE
    WHERE MANAGER_USERNAME = MAN_NAME;
END;
/
--Get all reims approved by MAN_NAME
CREATE OR REPLACE PROCEDURE GRAB_REIMS_BY_MAN_NAME
(MAN_NAME IN VARCHAR2, C_OUT OUT SYS_REFCURSOR)
AS BEGIN
    OPEN C_OUT FOR
    SELECT * FROM REIMBURSEMENT
    WHERE REIMBURSEMENT.APPROVING_MANAGER = MAN_NAME AND
        REIMBURSEMENT.STATUS = 1;
END;
/
--Get all reims made by User U_NAME
CREATE OR REPLACE PROCEDURE GRAB_REIMS_BY_U_NAME
(U_NAME IN VARCHAR2, C_OUT OUT SYS_REFCURSOR)
AS BEGIN
    OPEN C_OUT FOR
    SELECT * FROM REIMBURSEMENT
    WHERE REIMBURSEMENT.EMP_USERNAME = U_NAME;
END;
/
